// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//test model
model User {
  id           String    @id @default(uuid())
  login        String    @unique
  password     String
  isAdmin      Boolean   @default(false) @map("is_admin")
  refreshToken String?   @map("refresh_token")
  lastLoginAt  DateTime? @map("last_login_at")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")

  // groupId String? @map("group_id")
  // Group   Group?  @relation(fields: [groupId], references: [id])

  @@index([login])
  @@map("users")
}

model Department {
  id    String @id @default(uuid())
  title String @unique
  // courses Course[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([title])
  @@map("departments")
}

model Group {
  id String @id @default(uuid())

  title String @unique
  // courseId       Int?             @map("course_id")
  // course         Course?          @relation(fields: [courseId], references: [id], onDelete: Cascade)
  // StudentHistory StudentHistory[]
  // // students       Student[]
  // User  User[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([title])
  @@map("groups")
}
